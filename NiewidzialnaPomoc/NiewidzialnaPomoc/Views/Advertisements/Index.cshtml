@*@model IEnumerable<Repository.Models.Advertisement>*@
@using PagedList;
@using PagedList.Mvc;
@model IPagedList < Repository.Models.Advertisement >

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm(FormMethod.Get))
{
    <p>
        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, htmlAttributes: new { @class = "form-control" })
        @*@Html.DropDownList("Locations", null, htmlAttributes: new { @class = "form-control" })*@
        <button type="submit" class="btn btn-primary">Submit</button>
    </p>
    @*<div>
        <h3>@Html.DisplayNameFor()</h3>
        @foreach (var item in ViewBag.Locations)
        {
            @Html.CheckBoxFor()
        }
    </div>*@
    @*<div>
        <h3>Trudność</h3>
        <div class="checkbox">
            <label>
                <input type="checkbox" />
                Niska
            </label>
        </div>
        <div class="checkbox">
            <label>
                <input type="checkbox" />
                Średnia
            </label>
        </div>
        <div class="checkbox">
            <label>
                <input type="checkbox" />
                Wysoka
            </label>
        </div>
    </div>*@
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Author.UserName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Location.Name)
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Title).ToHtmlString(), "Index", new { sortOrder = ViewBag.TitleSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().AddDate).ToHtmlString(), "Index", new { sortOrder = ViewBag.AddDateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.FirstOrDefault().Difficulty.Name).ToHtmlString(), "Index", new { sortOrder = ViewBag.DifficultySortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Author.UserName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Location.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AddDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Difficulty.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
