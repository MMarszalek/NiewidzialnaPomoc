@using PagedList;
@using PagedList.Mvc;
@model  Repository.Models.Views.AdvertisementsListViewModel

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@using (Html.BeginForm(FormMethod.Get))
{
    <p>
        @Html.TextBoxFor(model => model.SearchModel.TitleContent, htmlAttributes: new { @class = "form-control" })
        @Html.DropDownListFor(model => model.SearchModel.LocationId, new SelectList(Model.Locations, "Id", "Name"), "", htmlAttributes: new { @class = "form-control" })
        <button type="submit" class="btn btn-primary">Submit</button>
    </p>
    <div>
        <h3>@Html.DisplayNameFor(model => model.AvaibleCategories.FirstOrDefault().Name)</h3>
        @Html.CheckBoxListFor(model => model.SearchModel.PostedCategories.CategoriesIds,
        model => model.AvaibleCategories,
        category => category.Id,
        category => category.Name,
        model => model.SelectedCategories)
    </div>
    <div>
        <h3>@Html.DisplayNameFor(model => model.AvaibleDifficulties.FirstOrDefault().Name)</h3>
        @Html.CheckBoxListFor(model => model.SearchModel.PostedDifficulties.DifficultiesIds,
        model => model.AvaibleDifficulties,
        difficulty => difficulty.Id,
        difficulty => difficulty.Name,
        model => model.SelectedDifficulties)
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Advertisements.FirstOrDefault().Author.UserName)
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Advertisements.FirstOrDefault().Location.Name).ToHtmlString(), "Index", new { sortOrder = ViewBag.LocationSortParm })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Advertisements.FirstOrDefault().Title).ToHtmlString(), "Index", new { sortOrder = ViewBag.TitleSortParm })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Advertisements.FirstOrDefault().AddDate).ToHtmlString(), "Index", new { sortOrder = ViewBag.AddDateSortParm })
        </th>
        <th>
            @Html.ActionLink(Html.DisplayNameFor(model => model.Advertisements.FirstOrDefault().Difficulty.Name).ToHtmlString(), "Index", new { sortOrder = ViewBag.DifficultySortParm })
        </th>
    </tr>

    @foreach (var item in Model.Advertisements)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Author.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AddDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Difficulty.Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.Advertisements.PageCount < Model.Advertisements.PageNumber ? 0 : Model.Advertisements.PageNumber) of @Model.Advertisements.PageCount

@Html.PagedListPager(Model.Advertisements, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort }))