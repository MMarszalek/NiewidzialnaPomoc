@model Repository.Models.Advertisement

@{
    ViewBag.Title = Model.Title;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("EditPA", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edycja</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control", @style = "height:150px;" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control", @style = "width:150px;" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DifficultyId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("DifficultyId", null, htmlAttributes: new { @class = "form-control", @style = "width:150px;" })
                @Html.ValidationMessageFor(model => model.DifficultyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <span class="control-label col-md-2"><strong>Zdjęcia</strong></span>
            <div class="col-md-10">
                @if (Model.AdvertisementPhotos.Any())
                {
                    foreach (var p in Model.AdvertisementPhotos)
                    {
                        <img src="~/AdvertisementPhoto?id=@p.Id&thumbnail=true" alt="photo" />
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Nowe zdjęcia", new { @class = "control-label col-md-2" })
            @Html.ValidationMessageFor(model => model.AdvertisementPhotos.FirstOrDefault().FileContent, "", new { @class = "text-danger" })
            <div class="col-md-10">
                <input type="file" name="uploads" />
                <input type="file" name="uploads" />
                <input type="file" name="uploads" />
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
